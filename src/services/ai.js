const OpenAI = require('openai')
const db = require('../database/connection')

class AIService {
  constructor() {
    this.openai = new OpenAI({
      apiKey: process.env.OPENAI_API_KEY
    })

    this.conversations = new Map()

    this.faqAnswers = {
      assortment: `üõç **–ù–∞—à –∞—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç:**

–ú–∏ –ø—Ä–æ–ø–æ–Ω—É—î–º–æ –≤–µ–ª–∏–∫–∏–π –≤–∏–±—ñ—Ä –∂—ñ–Ω–æ—á–æ–≥–æ –¥–æ–º–∞—à–Ω—å–æ–≥–æ –æ–¥—è–≥—É —Ç–∞ –∞–∫—Å–µ—Å—É–∞—Ä—ñ–≤:
‚Ä¢ –ö–æ–º–ø–ª–µ–∫—Ç–∏ –∑ –º–µ—Ä–µ–∂–∏–≤–æ–º: –º–∞–π–∫–∏, —à–æ—Ä—Ç–∏, –∫–æ–º–±—ñ–Ω–∞—Ü—ñ—ó, —Ö–∞–ª–∞—Ç–∏, –ø–æ–≤–Ω—ñ –∫–æ–º–ø–ª–µ–∫—Ç–∏ –∑ 4 –ø—Ä–µ–¥–º–µ—Ç—ñ–≤
‚Ä¢ –•–∞–ª–∞—Ç–∏ "–ì–µ–π—à–∞": –∫–æ—Ä–æ—Ç–∫—ñ (80 —Å–º), –¥–æ–≤–≥—ñ (130 —Å–º), –∑ –ø—Ä–∏–Ω—Ç–∞–º–∏
‚Ä¢ –ü—ñ–∂–∞–º–∏: —Å–æ—Ä–æ—á–∫–∞ –∑ —à–æ—Ä—Ç–∞–º–∏, –¥–æ–≤–≥—ñ —Å–æ—Ä–æ—á–∫–∏, –≤–µ–ª—é—Ä–æ–≤—ñ –∫–æ–º–ø–ª–µ–∫—Ç–∏, —Ç–æ–ø–∏ –∑ —à–æ—Ä—Ç–∞–º–∏
‚Ä¢ –°–µ—Ç–∏ "–ì–∞—Ä–Ω–∞": –æ–¥–Ω–æ—Ç–æ–Ω–Ω—ñ –∞–±–æ –∑ –ø—Ä–∏–Ω—Ç–æ–º
‚Ä¢ –ü—É—Ö–Ω–∞—Å—Ç—ñ —Ç–∞–ø—É–ª—ñ (–¥–æ–º–∞—à–Ω—ñ —Ç–∞–ø–∫–∏)
‚Ä¢ –®–æ—Ä—Ç–∏ –∑ —Ä–æ–∑—Ä—ñ–∑–æ–º: –æ–¥–Ω–æ—Ç–æ–Ω–Ω—ñ —Ç–∞ –∑ –ø—Ä–∏–Ω—Ç–æ–º
‚Ä¢ –û–¥—è–≥ –¥–ª—è –≤—É–ª–∏—Ü—ñ: –∫–æ–º–ø–ª–µ–∫—Ç–∏ –∑ —Å–æ—Ä–æ—á–∫–æ—é —ñ –±—Ä—é–∫–∞–º–∏, —à–æ—Ä—Ç–∞–º–∏ –∞–±–æ 3-–≤-1
‚Ä¢ –ù—ñ—á–Ω—ñ —Å–æ—Ä–æ—á–∫–∏: –∞—Å–∏–º–µ—Ç—Ä—ñ—è, –º–∞–∫—Å—ñ, –º—ñ–Ω—ñ, –ø—Ä–∏–Ω—Ç–∏
‚Ä¢ –¢–∞ —ñ–Ω—à—ñ –∑–∞—Ç–∏—à–Ω—ñ —Ä–µ—á—ñ –¥–ª—è –¥–æ–º—É

üìù –Ø–∫—â–æ –≤–∏ —à—É–∫–∞—î—Ç–µ —â–æ—Å—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–µ ‚Äî –Ω–∞–ø–∏—à—ñ—Ç—å —É –±—É–¥—å-—è–∫—ñ–π —Ñ–æ—Ä–º—ñ, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥ "—Ö–∞–ª–∞—Ç –¥–æ–≤–≥–∏–π", "–ø—ñ–∂–∞–º–∞ –≤–µ–ª—é—Ä", "—à–æ—Ä—Ç–∏ —Å —Ä–∞–∑—Ä–µ–∑–æ–º" ‚Äî —è –ø—ñ–¥–±–µ—Ä—É –≤–∞—Ä—ñ–∞–Ω—Ç–∏!

üéØ –ß–∏ –º–æ–∂—É –¥–æ–ø–æ–º–æ–≥—Ç–∏ –∑ —á–∏–º–æ—Å—å —â–µ?`,

      delivery: `üì¶ **–î–æ—Å—Ç–∞–≤–∫–∞:**

–î–æ—Å—Ç–∞–≤–∫–∞ –≤–∏–∫–ª—é—á–Ω–æ —á–µ—Ä–µ–∑ "–ù–æ–≤—É –ø–æ—à—Ç—É" –ø–æ –≤—Å—ñ–π –£–∫—Ä–∞—ó–Ω—ñ: —É –≤—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è, –ø–æ—à—Ç–æ–º–∞—Ç –∞–±–æ –∫—É—Ä'—î—Ä–æ–º.

‚è± **–ö–æ–ª–∏ –≤—ñ–¥–ø—Ä–∞–≤–∫–∞:**
‚Ä¢ –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–æ—Ç—è–≥–æ–º 1‚Äì3 –¥–Ω—ñ–≤
‚Ä¢ –í–∏ –æ—Ç—Ä–∏–º–∞—î—Ç–µ SMS –∞–±–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ "–ù–æ–≤–æ—ó –ø–æ—à—Ç–∏", –∫–æ–ª–∏ –ø–æ—Å–∏–ª–∫–∞ –±—É–¥–µ –≤ –¥–æ—Ä–æ–∑—ñ
‚Ä¢ –ê–≤—Ç–æ–ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è —á–µ—Ä–µ–∑ 7 –¥–Ω—ñ–≤ –∑ –º–æ–º–µ–Ω—Ç—É –ø—Ä–∏–±—É—Ç—Ç—è

‚ö†Ô∏è **–í–ê–ñ–õ–ò–í–û:**
‚Ä¢ –ü–µ—Ä–µ–≤—ñ—Ä—è–π—Ç–µ —Ç–æ–≤–∞—Ä —É –≤—ñ–¥–¥—ñ–ª–µ–Ω–Ω—ñ ‚Äî —Ü—ñ–ª—ñ—Å–Ω—ñ—Å—Ç—å, –∫–æ–º–ø–ª–µ–∫—Ç–∞—Ü—ñ—é, —Ä–æ–∑–º—ñ—Ä, –∫–æ–ª—ñ—Ä
‚Ä¢ –Ø–∫—â–æ —î –ø—Ä–æ–±–ª–µ–º–∞ ‚Äî –º–æ–∂–Ω–∞ –≤—ñ–¥–º–æ–≤–∏—Ç–∏—Å—å –æ–¥—Ä–∞–∑—É
‚Ä¢ –ü—Ä–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—ñ —É –ø–æ—à—Ç–æ–º–∞—Ç –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–µ–º–æ–∂–ª–∏–≤–∞
‚Ä¢ –ü–æ–∑–∞ –≤—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è–º –ø—Ä–µ—Ç–µ–Ω–∑—ñ—ó –Ω–µ –ø—Ä–∏–π–º–∞—é—Ç—å—Å—è
‚Ä¢ –Ø–∫—â–æ –∑–∞–±—Ä–∞–ª–∏ —Ç–æ–≤–∞—Ä ‚Äî –≤–≤–∞–∂–∞—î—Ç—å—Å—è, —â–æ –≤—Å–µ –≤ –ø–æ—Ä—è–¥–∫—É

üéØ –ß–∏ –º–æ–∂—É –¥–æ–ø–æ–º–æ–≥—Ç–∏ –∑ —á–∏–º–æ—Å—å —â–µ?`,

      payment: `üí≥ **–í–∞—Ä—ñ–∞–Ω—Ç–∏ –æ–ø–ª–∞—Ç–∏:**

üìÆ **–ë–µ–∑ –ø–µ—Ä–µ–¥–æ–ø–ª–∞—Ç–∏** (—Ä–µ–∫–æ–º–µ–Ω–¥—É—î–º–æ):
‚Ä¢ –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –±–µ–∑ –ø–µ—Ä–µ–¥–æ–ø–ª–∞—Ç–∏ (–Ω–∞–∫–ª–∞–¥–µ–Ω–∏–π –ø–ª–∞—Ç—ñ–∂) —á–µ—Ä–µ–∑ "–ù–æ–≤—É –ø–æ—à—Ç—É"
‚Ä¢ –û–ø–ª–∞—Ç–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –∑ –ø—Ä–∞–≤–æ–º –æ–≥–ª—è–¥—É

üí∞ **–ü–µ—Ä–µ–¥–æ–ø–ª–∞—Ç–∞ 100%:**
–ó–∞ –±–∞–∂–∞–Ω–Ω—è–º –º–æ–∂–Ω–∞ –∑—Ä–æ–±–∏—Ç–∏ –ø–µ—Ä–µ–¥–æ–ø–ª–∞—Ç—É –Ω–∞ —Ä–µ–∫–≤—ñ–∑–∏—Ç–∏ –§–û–ü:

**UA163510050000026002879250787**
–Ñ–î–†–ü–û–£: 3076714494
–û—Ç—Ä–∏–º—É–≤–∞—á: –Ü–í–ê–•–ù–ï–ù–ö–û –†–û–ú–ê–ù –õ–ï–û–ù–Ü–î–û–í–ò–ß
–ü—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è –ø–ª–∞—Ç–µ–∂—É: ¬´–æ–ø–ª–∞—Ç–∞ –∑–∞ —Ç–æ–≤–∞—Ä¬ª

‚ùì –Ø–∫–∏–π —Å–ø–æ—Å—ñ–± –æ–ø–ª–∞—Ç–∏ –æ–±–∏—Ä–∞—î—Ç–µ?

üéØ –ß–∏ –º–æ–∂—É –¥–æ–ø–æ–º–æ–≥—Ç–∏ –∑ —á–∏–º–æ—Å—å —â–µ?`,

      sizes: `üìè **–ü—ñ–¥–±—ñ—Ä —Ä–æ–∑–º—ñ—Ä—É:**

–î–∞–≤–∞–π—Ç–µ –ø—ñ–¥–±–µ—Ä–µ–º–æ –≤–∞–º —ñ–¥–µ–∞–ª—å–Ω–∏–π —Ä–æ–∑–º—ñ—Ä! üìê

–ù–∞–ø–∏—à—ñ—Ç—å, –±—É–¥—å –ª–∞—Å–∫–∞:
‚Ä¢ –æ–±—Ö–≤–∞—Ç –≥—Ä—É–¥–µ–π (—Å–º)
‚Ä¢ –æ–±—Ö–≤–∞—Ç —Ç–∞–ª—ñ—ó (—Å–º)
‚Ä¢ –æ–±—Ö–≤–∞—Ç —Å—Ç–µ–≥–æ–Ω (—Å–º)

**–ù–∞—à–∞ —Ç–∞–±–ª–∏—Ü—è —Ä–æ–∑–º—ñ—Ä—ñ–≤:**

**XS** ‚Äî –ì: 84 | –¢: 66‚Äì76 | –°: 92 | UA 42
**S** ‚Äî –ì: 88 | –¢: 70‚Äì80 | –°: 96 | UA 44
**M** ‚Äî –ì: 92 | –¢: 74‚Äì84 | –°: 100 | UA 46
**L** ‚Äî –ì: 96 | –¢: 78‚Äì88 | –°: 104 | UA 48
**XL** ‚Äî –ì: 100 | –¢: 82‚Äì90 | –°: 108 | UA 50
**2XL** ‚Äî –ì: 104 | –¢: 86‚Äì94 | –°: 112 | UA 52
**3XL** ‚Äî –ì: 108‚Äì114 | –¢: 90‚Äì98 | –°: 116‚Äì126 | UA 54
**4XL** ‚Äî –ì: 112‚Äì118 | –¢: 98‚Äì102 | –°: 120‚Äì130 | UA 56
**5XL** ‚Äî –ì: 116‚Äì122 | –¢: 102‚Äì106 | –°: 124‚Äì134 | UA 58
**6XL** ‚Äî –ì: 120‚Äì126 | –¢: 106‚Äì112 | –°: 128‚Äì138 | UA 60
**7XL** ‚Äî –ì: 124‚Äì130 | –¢: 112‚Äì118 | –°: 132‚Äì142 | UA 62

üí° **–ü–æ—Ä–∞–¥–∞:** –Ø–∫—â–æ –≤–∞—à—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –º—ñ–∂ –¥–≤–æ–º–∞ —Ä–æ–∑–º—ñ—Ä–∞–º–∏ ‚Äî –∫—Ä–∞—â–µ –æ–±–∏—Ä–∞—Ç–∏ –±—ñ–ª—å—à–∏–π.

üéØ –ß–∏ –º–æ–∂—É –¥–æ–ø–æ–º–æ–≥—Ç–∏ –∑ —á–∏–º–æ—Å—å —â–µ?`,

      material: `üßµ **–ú–∞—Ç–µ—Ä—ñ–∞–ª:**

–¶–µ —à–æ–≤–∫ –ê—Ä–º–∞–Ω—ñ ‚Äî –ø—Ä–µ–º—ñ–∞–ª—å–Ω–∏–π –º–∞—Ç–µ—Ä—ñ–∞–ª –∑ –Ω—ñ–∂–Ω–æ—é —Ç–µ–∫—Å—Ç—É—Ä–æ—é, –ª–µ–≥–∫–∏–º –±–ª–∏—Å–∫–æ–º —ñ –¥—É–∂–µ –ø—Ä–∏—î–º–Ω–∏–π –¥–æ —Ç—ñ–ª–∞.

‚ú® **–ü–µ—Ä–µ–≤–∞–≥–∏:**
‚Ä¢ –í–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–π —ñ–∑ –≤–∏—Å–æ–∫–æ—è–∫—ñ—Å–Ω–æ–≥–æ –≤–æ–ª–æ–∫–Ω–∞
‚Ä¢ –ú—ñ—Ü–Ω–∏–π, –ª–µ–≥–∫–æ –ø–µ—Ä–µ—Ç—å—Å—è
‚Ä¢ –ó–±–µ—Ä—ñ–≥–∞—î –∫–æ–ª—ñ—Ä —ñ —Ñ–æ—Ä–º—É
‚Ä¢ –î–∞—Ä—É—î –≤—ñ–¥—á—É—Ç—Ç—è –∫–æ–º—Ñ–æ—Ä—Ç—É —Ç–∞ —Ä–æ–∑–∫–æ—à—ñ

üßº **–î–æ–≥–ª—è–¥:**
‚Ä¢ –†—É—á–Ω–µ –∞–±–æ –¥–µ–ª—ñ–∫–∞—Ç–Ω–µ –ø—Ä–∞–Ω–Ω—è –ø—Ä–∏ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ñ –¥–æ 30¬∞C
‚Ä¢ –ë–µ–∑ –≤—ñ–¥–±—ñ–ª—é–≤–∞—á—ñ–≤, –∑ –º—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–º –≤—ñ–¥–∂–∏–º–æ–º
‚Ä¢ –°—É—à–∏—Ç–∏ –ø—Ä–∏—Ä–æ–¥–Ω–∏–º —Å–ø–æ—Å–æ–±–æ–º, –Ω–µ –Ω–∞ –ø—Ä—è–º–æ–º—É —Å–æ–Ω—Ü—ñ
‚Ä¢ –ü—Ä–∞—Å–∫–∞ –Ω–∞ –Ω–∏–∑—å–∫—ñ–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ñ

üéØ –ß–∏ –º–æ–∂—É –¥–æ–ø–æ–º–æ–≥—Ç–∏ –∑ —á–∏–º–æ—Å—å —â–µ?`,

      exchange: `üîÑ **–û–±–º—ñ–Ω/–ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è:**

–ú–∏ –∑–∞–≤–∂–¥–∏ –≥–æ—Ç–æ–≤—ñ –∑–¥—ñ–π—Å–Ω–∏—Ç–∏ –æ–±–º—ñ–Ω –Ω–∞ —ñ–Ω—à–∏–π —Ä–æ–∑–º—ñ—Ä –∞–±–æ —Ç–æ–≤–∞—Ä –∑ –Ω–∞—à–æ–≥–æ –∞—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç—É –ø—Ä–æ—Ç—è–≥–æ–º 14 –¥–Ω—ñ–≤ –∑ –º–æ–º–µ–Ω—Ç—É –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è.

‚úÖ **–£–º–æ–≤–∏ –æ–±–º—ñ–Ω—É:**
‚Ä¢ –¢–æ–≤–∞—Ä –Ω–µ –ø–æ–≤–∏–Ω–µ–Ω –±—É—Ç–∏ —É –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—ñ
‚Ä¢ –ë–µ–∑ –ø–æ—à–∫–æ–¥–∂–µ–Ω—å –∞–±–æ —Å–ª—ñ–¥—ñ–≤ –Ω–æ—Å—ñ–Ω–Ω—è
‚Ä¢ –ó—ñ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è–º —Ç–æ–≤–∞—Ä–Ω–æ–≥–æ –≤–∏–≥–ª—è–¥—É —Ç–∞ —É–ø–∞–∫–æ–≤–∫–∏
‚Ä¢ –û–±–º—ñ–Ω –æ—Ñ–æ—Ä–º–ª—é—î—Ç—å—Å—è –ø—Ä–æ—Ç—è–≥–æ–º 3‚Äì5 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤
‚Ä¢ –û–±–º—ñ–Ω –æ–ø–ª–∞—á—É—î –≤—ñ–¥–ø—Ä–∞–≤–Ω–∏–∫ (–∫—Ä—ñ–º –≤–∏–ø–∞–¥–∫—ñ–≤ –¥–µ—Ñ–µ–∫—Ç—É)

üí∞ **–ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –∫–æ—à—Ç—ñ–≤:**
‚Ä¢ –õ–∏—à–µ —è–∫—â–æ —Ç–æ–≤–∞—Ä –±—É–≤ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∏–π —ñ –Ω–µ –æ—Ç—Ä–∏–º–∞–Ω–∏–π
‚Ä¢ –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –æ—Ñ–æ—Ä–º–ª—é—î—Ç—å—Å—è —É –≤—ñ–¥–¥—ñ–ª–µ–Ω–Ω—ñ –ø–æ—à—Ç–∏
‚Ä¢ –Ø–∫—â–æ —Ç–æ–≤–∞—Ä –æ—Ç—Ä–∏–º–∞–Ω–æ ‚Äî –º–æ–∂–ª–∏–≤–∏–π –ª–∏—à–µ –æ–±–º—ñ–Ω

üì¶ –ü—Ä–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—ñ –¥–æ—Å—Ç–∞–≤–∫–∏ "–ù–æ–≤–æ—é –ø–æ—à—Ç–æ—é" –º–æ–∂–Ω–∞ —Å–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏—Å—è –ø–æ—Å–ª—É–≥–æ—é "–õ–µ–≥–∫–µ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è".

üéØ –ß–∏ –º–æ–∂—É –¥–æ–ø–æ–º–æ–≥—Ç–∏ –∑ —á–∏–º–æ—Å—å —â–µ?`,

      promos: `üéÅ **–ê–∫—Ü—ñ—ó —Ç–∞ –∑–Ω–∏–∂–∫–∏:**

–ß–∞—Å –≤—ñ–¥ —á–∞—Å—É –±—É–≤–∞—é—Ç—å —Å–µ–∑–æ–Ω–Ω—ñ –∞–∫—Ü—ñ—ó —Ç–∞ –∑–Ω–∏–∂–∫–∏. 

–ù–∞–ø–∏—à—ñ—Ç—å, —è–∫–∏–π —Ç–æ–≤–∞—Ä –≤–∞—Å —Ü—ñ–∫–∞–≤–∏—Ç—å, —ñ —è –ø–µ—Ä–µ–≤—ñ—Ä—é –Ω–∞—è–≤–Ω—ñ—Å—Ç—å —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–æ—ó –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó! üõç

üéØ –ß–∏ –º–æ–∂—É –¥–æ–ø–æ–º–æ–≥—Ç–∏ –∑ —á–∏–º–æ—Å—å —â–µ?`,

      gift: `üéÅ **–ü–æ–¥–∞—Ä—É–Ω–∫–æ–≤–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è:**

–¢–∞–∫, –º–æ–∂–µ–º–æ –∫—Ä–∞—Å–∏–≤–æ —É–ø–∞–∫—É–≤–∞—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è —Ç–∞ –¥–æ–¥–∞—Ç–∏ –ª–∏—Å—Ç—ñ–≤–∫—É –∑ –≤–∞—à–∏–º –ø–æ–±–∞–∂–∞–Ω–Ω—è–º! üíå

–ü—Ä–æ—Å—Ç–æ –≤–∫–∞–∂—ñ—Ç—å –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è, —â–æ —Ü–µ –ø–æ–¥–∞—Ä—É–Ω–æ–∫.

üéØ –ß–∏ –º–æ–∂—É –¥–æ–ø–æ–º–æ–≥—Ç–∏ –∑ —á–∏–º–æ—Å—å —â–µ?`,

      plus_sizes: `üëó **–ë–∞—Ç–∞–ª—å–Ω—ñ —Ä–æ–∑–º—ñ—Ä–∏:**

–¢–∞–∫, —É –Ω–∞—Å —î –º–æ–¥–µ–ª—ñ –¥–æ 7XL (UA 62)! 

–Ø –ø—ñ–¥–∫–∞–∂—É, —è–∫—ñ —Å–∞–º–µ –¥–æ—Å—Ç—É–ø–Ω—ñ —É –≤–∞—à–æ–º—É —Ä–æ–∑–º—ñ—Ä—ñ. –ù–∞–ø–∏—à—ñ—Ç—å, —è–∫–∏–π —Ä–æ–∑–º—ñ—Ä –≤–∞—Å —Ü—ñ–∫–∞–≤–∏—Ç—å –∞–±–æ –≤–∞—à—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏.

üéØ –ß–∏ –º–æ–∂—É –¥–æ–ø–æ–º–æ–≥—Ç–∏ –∑ —á–∏–º–æ—Å—å —â–µ?`,

      custom: `‚úÇÔ∏è **–Ü–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–µ –ø–æ—à–∏—Ç—Ç—è:**

–ó–∞—Ä–∞–∑ –ø—Ä–∞—Ü—é—î–º–æ —Ç—ñ–ª—å–∫–∏ –∑ –≥–æ—Ç–æ–≤–∏–º–∏ –º–æ–¥–µ–ª—è–º–∏ —Ç–∞ —Ä–æ–∑–º—ñ—Ä–∞–º–∏ –∑ –∫–∞—Ç–∞–ª–æ–≥—É. 

–ú–æ–∂—É –¥–æ–ø–æ–º–æ–≥—Ç–∏ –ø—ñ–¥—ñ–±—Ä–∞—Ç–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –±–ª–∏–∑—å–∫–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç –ø—ñ–¥ –≤–∞—à—ñ –ø–æ—Ç—Ä–µ–±–∏! üéØ

üéØ –ß–∏ –º–æ–∂—É –¥–æ–ø–æ–º–æ–≥—Ç–∏ –∑ —á–∏–º–æ—Å—å —â–µ?`
    }
  }

  normalizeText(text) {
    return text.toLowerCase()
      .replace(/[^\w\s–∞-—è—ñ—ó—î“ë]/g, ' ')
      .replace(/\s+/g, ' ')
      .trim()
  }

  fuzzyMatch(text, pattern) {
    const normalizedText = this.normalizeText(text)
    const normalizedPattern = this.normalizeText(pattern)

    if (normalizedText.includes(normalizedPattern)) return 1.0

    const words = normalizedPattern.split(' ')
    const matches = words.filter(word => normalizedText.includes(word))
    return matches.length / words.length
  }

  checkFAQQuestion(userMessage) {
    const message = this.normalizeText(userMessage)

    const faqPatterns = [
      {
        patterns: ['–∞—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç', '—â–æ —É –≤–∞—Å —î', '—è–∫—ñ —Ç–æ–≤–∞—Ä–∏', '–∫–∞—Ç–∞–ª–æ–≥', '–≤–∏–±—ñ—Ä', '—â–æ –ø—Ä–æ–¥–∞—î—Ç–µ', '—è–∫–∏–π —É –≤–∞—Å –∞—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç'],
        answer: this.faqAnswers.assortment,
        confidence: 0.9
      },
      {
        patterns: ['–¥–æ—Å—Ç–∞–≤–∫–∞', '–≤—ñ–¥–ø—Ä–∞–≤–∫–∞', '–∫–æ–ª–∏ –æ—Ç—Ä–∏–º–∞—é', '—Å–∫—ñ–ª—å–∫–∏ –≤–µ–∑—É—Ç—å', '–Ω–æ–≤–∞ –ø–æ—à—Ç–∞', '–¥–æ—Å—Ç–∞–≤–ª—è—î—Ç–µ'],
        answer: this.faqAnswers.delivery,
        confidence: 0.9
      },
      {
        patterns: ['–æ–ø–ª–∞—Ç–∞', '–ø–ª–∞—Ç—ñ–∂', '—è–∫ –∑–∞–ø–ª–∞—Ç–∏—Ç–∏', '–±–µ–∑ –ø–µ—Ä–µ–¥–æ–ø–ª–∞—Ç–∏', '—Ä–µ–∫–≤—ñ–∑–∏—Ç–∏', '–Ω–∞–∫–ª–∞–¥–µ–Ω–∏–π'],
        answer: this.faqAnswers.payment,
        confidence: 0.9
      },
      {
        patterns: ['—Ä–æ–∑–º—ñ—Ä', '—è–∫ –æ–±—Ä–∞—Ç–∏', '—Ç–∞–±–ª–∏—Ü—è —Ä–æ–∑–º—ñ—Ä—ñ–≤', '–º—ñ—Ä–∏', '–ø–∞—Ä–∞–º–µ—Ç—Ä–∏', '–ø—ñ–¥—ñ–±—Ä–∞—Ç–∏ —Ä–æ–∑–º—ñ—Ä', '—Ä–æ–∑–º—ñ—Ä–Ω–∞ —Å—ñ—Ç–∫–∞'],
        answer: this.faqAnswers.sizes,
        confidence: 0.9
      },
      {
        patterns: ['–º–∞—Ç–µ—Ä—ñ–∞–ª', '—Ç–∫–∞–Ω–∏–Ω–∞', '–∑ —á–æ–≥–æ', '—à–æ–≤–∫', '–∞—Ä–º–∞–Ω—ñ', '—Å–∫–ª–∞–¥'],
        answer: this.faqAnswers.material,
        confidence: 0.9
      },
      {
        patterns: ['–æ–±–º—ñ–Ω', '–ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è', '–º–æ–∂–Ω–∞ –ø–æ–≤–µ—Ä–Ω—É—Ç–∏', '–æ–±–º—ñ–Ω—è—Ç–∏', '–Ω–µ –ø—ñ–¥—ñ–π—à–æ–≤'],
        answer: this.faqAnswers.exchange,
        confidence: 0.9
      },
      {
        patterns: ['–∞–∫—Ü—ñ—è', '–∑–Ω–∏–∂–∫–∞', '—Ä–æ–∑–ø—Ä–æ–¥–∞–∂', '—Å–ø–µ—Ü–ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—è'],
        answer: this.faqAnswers.promos,
        confidence: 0.9
      },
      {
        patterns: ['–ø–æ–¥–∞—Ä—É–Ω–æ–∫', '—É–ø–∞–∫—É–≤–∞—Ç–∏', '–ª–∏—Å—Ç—ñ–≤–∫–∞', '–ø–æ–¥–∞—Ä–æ—á–Ω–µ'],
        answer: this.faqAnswers.gift,
        confidence: 0.9
      },
      {
        patterns: ['–±–∞—Ç–∞–ª—å–Ω—ñ', '–≤–µ–ª–∏–∫—ñ —Ä–æ–∑–º—ñ—Ä–∏', '7xl', '6xl', '5xl', '4xl', '3xl'],
        answer: this.faqAnswers.plus_sizes,
        confidence: 0.9
      },
      {
        patterns: ['–Ω–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è', '—ñ–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–µ', '–ø–æ—à–∏—Ç–∏', '–ø—ñ–¥ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è', '–∑—à–∏—Ç–∏'],
        answer: this.faqAnswers.custom,
        confidence: 0.9
      }
    ]

    for (const faq of faqPatterns) {
      for (const pattern of faq.patterns) {
        const score = this.fuzzyMatch(message, pattern)
        if (score >= 0.85) {
          return {
            type: 'faq',
            answer: faq.answer,
            confidence: score * faq.confidence
          }
        }
      }
    }

    return null
  }

  checkProductQuery(userMessage) {
    const message = this.normalizeText(userMessage)

    const productKeywords = [
      '—Ö–∞–ª–∞—Ç', '–¥–æ–≤–≥–∏–π', '–∫–æ—Ä–æ—Ç–∫–∏–π', '–ø—ñ–∂–∞–º–∞', '–≤–µ–ª—é—Ä', '—à–æ—Ä—Ç–∏', '—Ä–æ–∑—Ä—ñ–∑',
      '–Ω—ñ—á–Ω–∞ —Å–æ—Ä–æ—á–∫–∞', '–º–µ—Ä–µ–∂–∏–≤–æ', '–∫–æ–º–ø–ª–µ–∫—Ç', '–≥–µ–π—à–∞', '–≥–∞—Ä–Ω–∞', '—Ç–∞–ø—É–ª—ñ',
      '—Ç–æ–ø', '–º–∞–π–∫–∞', '–∫–æ–º–±—ñ–Ω–∞—Ü—ñ—è', '–ø—Ä–∏–Ω—Ç', '–æ–¥–Ω–æ—Ç–æ–Ω–Ω–∏–π', '–∞—Å–∏–º–µ—Ç—Ä—ñ—è',
      '–º–∞–∫—Å—ñ', '–º—ñ–Ω—ñ', '–∑–∞—Ç–∏—à–Ω–∏–π', '–¥–æ–º–∞—à–Ω—ñ–π', '–æ–¥—è–≥', '–≤—É–ª–∏—Ü—è'
    ]

    const matches = productKeywords.filter(keyword => message.includes(keyword))
    const confidence = matches.length > 0 ? Math.min(matches.length / 3, 1) : 0

    if (confidence >= 0.3) {
      return {
        type: 'product_query',
        keywords: matches,
        confidence
      }
    }

    return null
  }

  getConversationContext(userId) {
    if (!this.conversations.has(userId)) {
      this.conversations.set(userId, {
        messages: [],
        lastRecommendedProducts: [],
        createdAt: Date.now()
      })
    }
    return this.conversations.get(userId)
  }

  cleanOldConversations() {
    const now = Date.now()
    const maxAge = 30 * 60 * 1000

    for (const [userId, context] of this.conversations.entries()) {
      if (now - context.createdAt > maxAge) {
        this.conversations.delete(userId)
      }
    }
  }

  // Handle follow-up questions about previously recommended products
  async handleFollowUpQuestion(userMessage, context, products) {
    const message = userMessage.toLowerCase()
    const lastProducts = context.lastRecommendedProducts

    if (lastProducts.length === 0) return null
    if (/–∫–æ–ª—å–æ—Ä|—Ü–≤—ñ—Ç|color|—â–æ —î –∑–∞ –∫–æ–ª—å–æ—Ä|—è–∫—ñ –∫–æ–ª—å–æ—Ä–∏|–∫–æ–ª—ñ—Ä/i.test(message)) {
      const productInfo = lastProducts.map(product => {
        const fullProduct = products.find(p => p.id === product.id)
        if (!fullProduct) return null

        try {
          const variants = JSON.parse(fullProduct.description || '{}')
          const colors = variants.colors || []
          return colors.length > 0
            ? `üé® **${product.name}**: ${colors.join(', ')}`
            : `üé® **${product.name}**: —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∫–æ–ª—å–æ—Ä–∏ —É—Ç–æ—á–Ω—é—î—Ç—å—Å—è`
        } catch {
          return `üé® **${product.name}**: —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∫–æ–ª—å–æ—Ä–∏ —É—Ç–æ—á–Ω—é—î—Ç—å—Å—è`
        }
      }).filter(Boolean)

      if (productInfo.length > 0) {
        return {
          text: `üé® **–î–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–ª—å–æ—Ä–∏:**\n\n${productInfo.join('\n\n')}\n\nüéØ –ß–∏ –º–æ–∂—É –¥–æ–ø–æ–º–æ–≥—Ç–∏ –∑ —á–∏–º–æ—Å—å —â–µ?`,
          recommendedProducts: lastProducts
        }
      }
    }

    if (/—Ä–æ–∑–º—ñ—Ä|size|—è–∫–∏–π —Ä–æ–∑–º—ñ—Ä|—Ä–æ–∑–º—ñ—Ä–Ω–∞ —Å—ñ—Ç–∫–∞/i.test(message)) {
      const productInfo = lastProducts.map(product => {
        const fullProduct = products.find(p => p.id === product.id)
        if (!fullProduct) return null

        try {
          const variants = JSON.parse(fullProduct.description || '{}')
          const sizes = variants.sizes || []
          return sizes.length > 0
            ? `üìè **${product.name}**: ${sizes.join(', ')}`
            : `üìè **${product.name}**: —É–Ω—ñ–≤–µ—Ä—Å–∞–ª—å–Ω–∏–π —Ä–æ–∑–º—ñ—Ä`
        } catch {
          return `üìè **${product.name}**: —É—Ç–æ—á–Ω—é—î—Ç—å—Å—è`
        }
      }).filter(Boolean)

      if (productInfo.length > 0) {
        return {
          text: `üìè **–î–æ—Å—Ç—É–ø–Ω—ñ —Ä–æ–∑–º—ñ—Ä–∏:**\n\n${productInfo.join('\n\n')}\n\n${this.faqAnswers.sizes}`,
          recommendedProducts: lastProducts
        }
      }
    }

    return null
  }

  async getProductRecommendations(userMessage, userId) {
    try {
      this.cleanOldConversations()

      const faqResponse = this.checkFAQQuestion(userMessage)
      if (faqResponse && faqResponse.confidence >= 0.85) {
        return {
          text: faqResponse.answer,
          recommendedProducts: []
        }
      }

      const productQuery = this.checkProductQuery(userMessage)
      if (productQuery && productQuery.confidence >= 0.78) {
        console.log('Product query detected:', productQuery)
      } else if (productQuery && productQuery.confidence < 0.6) {
        return {
          text: `–©–æ–± —Ç–æ—á–Ω–æ –≤—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏, —É—Ç–æ—á–Ω—ñ—Ç—å, –±—É–¥—å –ª–∞—Å–∫–∞:

‚Ä¢ –Ø–∫–∏–π —Ç–∏–ø –æ–¥—è–≥—É –≤–∞—Å —Ü—ñ–∫–∞–≤–∏—Ç—å?
‚Ä¢ –Ø–∫–∏–π —Ä–æ–∑–º—ñ—Ä –ø–æ—Ç—Ä—ñ–±–µ–Ω?
‚Ä¢ –Ø–∫—ñ –∫–æ–ª—å–æ—Ä–∏ –≤–ø–æ–¥–æ–±–∞—î—Ç–µ?

üí¨ –ê–±–æ –Ω–∞–ø–∏—à—ñ—Ç—å —É –≤—ñ–ª—å–Ω—ñ–π —Ñ–æ—Ä–º—ñ, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥: "—Ö–∞–ª–∞—Ç –¥–æ–≤–≥–∏–π", "–ø—ñ–∂–∞–º–∞ –≤–µ–ª—é—Ä", "—à–æ—Ä—Ç–∏ –∑ —Ä–æ–∑—Ä—ñ–∑–æ–º"

üéØ –ß–∏ –º–æ–∂—É –¥–æ–ø–æ–º–æ–≥—Ç–∏ –∑ —á–∏–º–æ—Å—å —â–µ?`,
          recommendedProducts: []
        }
      }

      const context = this.getConversationContext(userId)
      const products = await db.all(`
        SELECT p.id, p.name, p.description, p.price, p.sale_price, 
               p.stock_quantity, c.name as category_name
        FROM products p
        LEFT JOIN categories c ON p.category_id = c.id
        WHERE p.active = 1 AND p.stock_quantity > 0
        ORDER BY c.name, p.name
      `)

      const followUpResponse = await this.handleFollowUpQuestion(userMessage, context, products)
      if (followUpResponse) {
        return followUpResponse
      }

      const allProducts = products.map(p => {
        let variants = { colors: [], sizes: [] }
        try {
          if (p.description) {
            variants = JSON.parse(p.description)
          }
        } catch (e) {
        }

        return {
          id: p.id,
          name: p.name,
          price: p.sale_price || p.price,
          category: p.category_name,
          colors: variants.colors || [],
          sizes: variants.sizes || [],
          stock: p.stock_quantity
        }
      })

      const messageWords = userMessage.toLowerCase().split(' ')
      const relevantProducts = allProducts
        .map(product => {
          let relevanceScore = 0
          const productName = product.name.toLowerCase()
          const category = (product.category || '').toLowerCase()

          messageWords.forEach(word => {
            if (productName.includes(word)) relevanceScore += 3
            if (category.includes(word)) relevanceScore += 2
          })

          if (userMessage.match(/—Ö–∞–ª–∞—Ç/i) && productName.includes('—Ö–∞–ª–∞—Ç')) relevanceScore += 5
          if (userMessage.match(/–ø—ñ–∂–∞–º/i) && productName.includes('–ø—ñ–∂–∞–º')) relevanceScore += 5
          if (userMessage.match(/—Å–æ—Ä–æ—á–∫/i) && productName.includes('—Å–æ—Ä–æ—á–∫')) relevanceScore += 5
          if (userMessage.match(/—à–æ—Ä—Ç/i) && productName.includes('—à–æ—Ä—Ç')) relevanceScore += 5
          if (userMessage.match(/–∫–æ–º–ø–ª–µ–∫—Ç/i) && productName.includes('–∫–æ–º–ø–ª–µ–∫—Ç')) relevanceScore += 5

          return { ...product, relevanceScore }
        })
        .sort((a, b) => b.relevanceScore - a.relevanceScore)
        .slice(0, 30)

      const catalogSummary = relevantProducts.map(p =>
        `${p.name}: ${p.price}‚Ç¥${p.colors.length > 0 ? ` (${p.colors.slice(0, 3).join(', ')})` : ''}`
      ).join('\n')

      const systemPrompt = `–í–∏ - –≤–≤—ñ—á–ª–∏–≤–∏–π –ø–æ–º—ñ—á–Ω–∏–∫ –º–∞–≥–∞–∑–∏–Ω—É "–í—ñ–¥–æ–º–∞ –≤–¥–æ–º–∞". 

–û–°–ù–û–í–ù–Ü –ü–†–ê–í–ò–õ–ê:
1. –°–ø–æ—á–∞—Ç–∫—É —à—É–∫–∞–π—Ç–µ —Ç–æ—á–Ω—É –≤—ñ–¥–ø–æ–≤—ñ–¥—å —É FAQ 
2. –Ø–∫—â–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ - —à—É–∫–∞–π—Ç–µ —É –≤–Ω—É—Ç—Ä—ñ—à–Ω—ñ—Ö –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ö
3. –Ø–∫—â–æ –±—Ä–∞–∫—É—î –¥–∞–Ω–∏—Ö - —Å—Ç–∞–≤—Ç–µ —É—Ç–æ—á–Ω—é—é—á—ñ –ø–∏—Ç–∞–Ω–Ω—è
4. –ù–Ü–ö–û–õ–ò –Ω–µ –≤–∏–≥–∞–¥—É–π—Ç–µ —Ñ–∞–∫—Ç–∏
5. –í—ñ–¥–ø–æ–≤—ñ–¥–∞–π—Ç–µ –∫–æ—Ä–æ—Ç–∫–æ, —è—Å–Ω–æ —Ç–∞ –¥—Ä—É–∂–Ω—å–æ
6. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ —É–∫—Ä–∞—ó–Ω—Å—å–∫—É –º–æ–≤—É
7. –ó–∞–≤–∂–¥–∏ –∑–∞–≤–µ—Ä—à—É–π—Ç–µ —Ñ—Ä–∞–∑–æ—é "üéØ –ß–∏ –º–æ–∂—É –¥–æ–ø–æ–º–æ–≥—Ç–∏ –∑ —á–∏–º–æ—Å—å —â–µ?"

–†–µ–ª–µ–≤–∞–Ω—Ç–Ω—ñ —Ç–æ–≤–∞—Ä–∏ –∑ –∫–∞—Ç–∞–ª–æ–≥—É:
${catalogSummary}

–ê—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç:
‚Ä¢ –ö–æ–º–ø–ª–µ–∫—Ç–∏ –∑ –º–µ—Ä–µ–∂–∏–≤–æ–º: –º–∞–π–∫–∏, —à–æ—Ä—Ç–∏, –∫–æ–º–±—ñ–Ω–∞—Ü—ñ—ó, —Ö–∞–ª–∞—Ç–∏, –ø–æ–≤–Ω—ñ –∫–æ–º–ø–ª–µ–∫—Ç–∏ –∑ 4 –ø—Ä–µ–¥–º–µ—Ç—ñ–≤
‚Ä¢ –•–∞–ª–∞—Ç–∏ "–ì–µ–π—à–∞": –∫–æ—Ä–æ—Ç–∫—ñ (80 —Å–º), –¥–æ–≤–≥—ñ (130 —Å–º), –∑ –ø—Ä–∏–Ω—Ç–∞–º–∏  
‚Ä¢ –ü—ñ–∂–∞–º–∏: —Å–æ—Ä–æ—á–∫–∞ –∑ —à–æ—Ä—Ç–∞–º–∏, –¥–æ–≤–≥—ñ —Å–æ—Ä–æ—á–∫–∏, –≤–µ–ª—é—Ä–æ–≤—ñ –∫–æ–º–ø–ª–µ–∫—Ç–∏, —Ç–æ–ø–∏ –∑ —à–æ—Ä—Ç–∞–º–∏
‚Ä¢ –°–µ—Ç–∏ "–ì–∞—Ä–Ω–∞": –æ–¥–Ω–æ—Ç–æ–Ω–Ω—ñ –∞–±–æ –∑ –ø—Ä–∏–Ω—Ç–æ–º
‚Ä¢ –ü—É—Ö–Ω–∞—Å—Ç—ñ —Ç–∞–ø—É–ª—ñ (–¥–æ–º–∞—à–Ω—ñ —Ç–∞–ø–∫–∏)
‚Ä¢ –®–æ—Ä—Ç–∏ –∑ —Ä–æ–∑—Ä—ñ–∑–æ–º: –æ–¥–Ω–æ—Ç–æ–Ω–Ω—ñ —Ç–∞ –∑ –ø—Ä–∏–Ω—Ç–æ–º
‚Ä¢ –û–¥—è–≥ –¥–ª—è –≤—É–ª–∏—Ü—ñ: –∫–æ–º–ø–ª–µ–∫—Ç–∏ –∑ —Å–æ—Ä–æ—á–∫–æ—é —ñ –±—Ä—é–∫–∞–º–∏, —à–æ—Ä—Ç–∞–º–∏ –∞–±–æ 3-–≤-1
‚Ä¢ –ù—ñ—á–Ω—ñ —Å–æ—Ä–æ—á–∫–∏: –∞—Å–∏–º–µ—Ç—Ä—ñ—è, –º–∞–∫—Å—ñ, –º—ñ–Ω—ñ, –ø—Ä–∏–Ω—Ç–∏
‚Ä¢ –¢–∞ —ñ–Ω—à—ñ –∑–∞—Ç–∏—à–Ω—ñ —Ä–µ—á—ñ –¥–ª—è –¥–æ–º—É

–Ü–ù–§–û–†–ú–ê–¶–Ü–Ø:
üì¶ –î–æ—Å—Ç–∞–≤–∫–∞: "–ù–æ–≤–∞ –ü–æ—à—Ç–∞" –ø–æ –£–∫—Ä–∞—ó–Ω—ñ (–≤—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è, –ø–æ—à—Ç–æ–º–∞—Ç, –∫—É—Ä'—î—Ä)
üí≥ –û–ø–ª–∞—Ç–∞: –ù–∞–∫–ª–∞–¥–µ–Ω–∏–π –ø–ª–∞—Ç—ñ–∂ (–±–µ–∑ –ø–µ—Ä–µ–¥–æ–ø–ª–∞—Ç–∏) –∑ –æ–≥–ª—è–¥–æ–º –∞–±–æ –ø–µ—Ä–µ–¥–æ–ø–ª–∞—Ç–∞ 100% –Ω–∞ —Ä–∞—Ö—É–Ω–æ–∫ –§–û–ü
üßµ –ú–∞—Ç–µ—Ä—ñ–∞–ª: –®–æ–≤–∫ –ê—Ä–º–∞–Ω—ñ - –º'—è–∫–∏–π –±–ª–∏—Å–∫, –ø—Ä–∏—î–º–Ω–∏–π –¥–æ—Ç–∏–∫, –º—ñ—Ü–Ω–∏–π, –ª–µ–≥–∫–æ –ø–µ—Ä–µ—Ç—å—Å—è
üìè –†–æ–∑–º—ñ—Ä–∏: XS-7XL (UA 42-62)
üîÑ –û–±–º—ñ–Ω: –ø—Ä–æ—Ç—è–≥–æ–º 14 –¥–Ω—ñ–≤, —Ç–æ–≤–∞—Ä –±–µ–∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è
üí∞ –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è: —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ —Ç–æ–≤–∞—Ä –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–ª–µ –Ω–µ –æ—Ç—Ä–∏–º–∞–Ω–æ
üéÅ –ü–æ–¥–∞—Ä—É–Ω–∫–∏: –º–æ–∂–µ–º–æ —É–ø–∞–∫—É–≤–∞—Ç–∏ —Ç–∞ –¥–æ–¥–∞—Ç–∏ –ª–∏—Å—Ç—ñ–≤–∫—É

–í–ó–ê–Ñ–ú–û–î–Ü–Ø:
- –†–µ–∫–æ–º–µ–Ω–¥—É–π—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ñ —Ç–æ–≤–∞—Ä–∏ –∑ –∫–∞—Ç–∞–ª–æ–≥—É
- –í–∫–∞–∑—É–π—Ç–µ –¥–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–ª—å–æ—Ä–∏ —Ç–∞ —Ä–æ–∑–º—ñ—Ä–∏
- –Ø–∫—â–æ –Ω–µ–º–∞—î —Ç–æ—á–Ω–∏—Ö –¥–∞–Ω–∏—Ö - –ø—Ä–æ–ø–æ–Ω—É–π—Ç–µ —É—Ç–æ—á–Ω–µ–Ω–Ω—è
- –ù–µ –≤–∏–≥–∞–¥—É–π—Ç–µ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å —á–∏ —Ü—ñ–Ω–∏ –±–µ–∑ –¥–∂–µ—Ä–µ–ª–∞`

      const messages = [
        {
          role: 'system',
          content: systemPrompt
        },
        ...context.messages,
        {
          role: 'user',
          content: userMessage
        }
      ]

      const recentMessages = [
        messages[0],
        ...messages.slice(-4)
      ]

      const completion = await this.openai.chat.completions.create({
        model: 'gpt-4',
        messages: recentMessages,
        max_tokens: 600,
        temperature: 0.7
      })

      const aiResponse = completion.choices[0]?.message?.content
      const recommendedProducts = this.extractProductRecommendations(aiResponse, relevantProducts)

      context.messages.push(
        { role: 'user', content: userMessage.substring(0, 200) },
        { role: 'assistant', content: aiResponse ? aiResponse.substring(0, 500) : '' }
      )

      if (context.messages.length > 6) {
        context.messages = context.messages.slice(-4)
      }

      if (recommendedProducts.length > 0) {
        context.lastRecommendedProducts = recommendedProducts
      }

      context.createdAt = Date.now()

      return {
        text: aiResponse || '–í–∏–±–∞—á—Ç–µ, –Ω–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –≤—ñ–¥ AI –ø–æ–º—ñ—á–Ω–∏–∫–∞.',
        recommendedProducts: recommendedProducts || []
      }
    } catch (error) {
      console.error('AI Service Error:', error)
      return {
        text: `–í–∏–±–∞—á—Ç–µ, –∑–∞—Ä–∞–∑ —É –º–µ–Ω–µ —Ç–µ—Ö–Ω—ñ—á–Ω—ñ –ø—Ä–æ–±–ª–µ–º–∏ –∑ AI-–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—î—é. üòî

–í–∏ –º–æ–∂–µ—Ç–µ:
üõç –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Ç–æ–≤–∞—Ä–∏ —á–µ—Ä–µ–∑ –º–µ–Ω—é
üìù –ù–∞–ø–∏—Å–∞—Ç–∏ –≤–∞—à–µ –ø–∏—Ç–∞–Ω–Ω—è, —ñ –Ω–∞—à—ñ —Å–ø—ñ–≤—Ä–æ–±—ñ—Ç–Ω–∏–∫–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—Ç–∏–º—É—Ç—å –≤—Ä—É—á–Ω—É
üè† –í–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ /start –¥–ª—è –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é`,
        recommendedProducts: []
      }
    }
  }

  extractProductRecommendations(aiResponse, products) {
    const recommendations = []

    if (!aiResponse || !products) return recommendations

    const lowerResponse = aiResponse.toLowerCase()

    products.forEach(product => {
      const productNameLower = product.name.toLowerCase()

      if (lowerResponse.includes(productNameLower)) {
        recommendations.push({
          id: product.id,
          name: product.name,
          price: product.sale_price || product.price
        })
        return
      }

      const nameWords = productNameLower.split(' ')
      let matchCount = 0
      nameWords.forEach(word => {
        if (word.length > 3 && lowerResponse.includes(word)) {
          matchCount++
        }
      })

      if (nameWords.length > 1 && matchCount >= Math.ceil(nameWords.length / 2)) {
        recommendations.push({
          id: product.id,
          name: product.name,
          price: product.sale_price || product.price
        })
      }
    })

    const uniqueRecommendations = recommendations.filter((item, index, self) =>
      index === self.findIndex(t => t.id === item.id)
    )

    return uniqueRecommendations.slice(0, 5)
  }

  createRecommendationKeyboard(recommendedProducts) {
    const buttons = []

    if (recommendedProducts && Array.isArray(recommendedProducts)) {
      recommendedProducts.forEach(product => {
        buttons.push([{
          text: `üõç ${product.name} - ${product.price}‚Ç¥`,
          callback_data: `product_${product.id}`
        }])
      })
    }

    buttons.push([
      { text: 'üõç –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –≤—Å—ñ —Ç–æ–≤–∞—Ä–∏', callback_data: 'browse_products' },
      { text: 'üè† –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é', callback_data: 'main_menu' }
    ])

    return {
      reply_markup: {
        inline_keyboard: buttons
      }
    }
  }
}

module.exports = new AIService()
