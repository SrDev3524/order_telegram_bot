<div class="d-flex justify-content-between align-items-center mb-4">
    <h2>Category Management</h2>
    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#categoryModal">
        <i class="fas fa-plus"></i> Add Category
    </button>
</div>

<% if (error) { %>
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <%= error %>
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
<% } %>

<% if (success) { %>
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <%= success %>
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
<% } %>

<div class="row mb-3">
    <div class="col-md-6">
        <div class="form-check">
            <input class="form-check-input" type="checkbox" id="showInactive">
            <label class="form-check-label" for="showInactive">
                Show Inactive Categories
            </label>
        </div>
    </div>
    <div class="col-md-6">
        <div class="input-group">
            <input type="text" class="form-control" id="searchCategories" placeholder="Search categories..."
            <button class="btn btn-outline-secondary" type="button">
                <i class="fas fa-search"></i>
            </button>
        </div>
    </div>
</div>

<div class="table-responsive">
    <table class="table table-striped table-hover" id="categoriesTable">
        <thead class="table-dark">
            <tr>
                <th>ID</th>
                <th>Image</th>
                <th>Name</th>
                <th>Description</th>
                <th>Parent Category</th>
                <th>Products</th>
                <th>Order</th>
                <th>Status</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            <% categories.forEach(category => { %>
                <tr data-category-id="<%= category.id %>" class="<%= category.active ? '' : 'table-secondary' %>">
                    <td><%= category.id %></td>
                    <td>
                        <% if (category.image_url) { %>
                            <img src="<%= category.image_url %>" alt="<%= category.name %>" class="category-thumbnail" style="width: 40px; height: 40px; object-fit: cover; border-radius: 4px;">
                        <% } else { %>
                            <div class="bg-light d-flex align-items-center justify-content-center" style="width: 40px; height: 40px; border-radius: 4px;">
                                <i class="fas fa-image text-muted"></i>
                            </div>
                        <% } %>
                    </td>
                    <td>
                        <strong><%= category.name %></strong>
                    </td>
                    <td>
                        <span class="text-muted"><%= category.description || '-' %></span>
                    </td>
                    <td>
                        <% if (category.parent_id) { %>
                            <% const parent = categories.find(c => c.id === category.parent_id) %>
                            <% if (parent) { %>
                                <span class="badge bg-info"><%= parent.name %></span>
                            <% } else { %>
                                <span class="text-muted">ID: <%= category.parent_id %></span>
                            <% } %>
                        <% } else { %>
                            <span class="badge bg-primary">Main</span>
                        <% } %>
                    </td>
                    <td>
                        <span class="product-count" data-category-id="<%= category.id %>">-</span>
                    </td>
                    <td>
                        <span class="badge bg-secondary"><%= category.sort_order || 0 %></span>
                    </td>
                    <td>
                        <% if (category.active) { %>
                            <span class="badge bg-success">Active</span>
                        <% } else { %>
                            <span class="badge bg-danger">Inactive</span>
                        <% } %>
                    </td>
                    <td>
                        <div class="btn-group btn-group-sm" role="group">
                            <button type="button" class="btn btn-outline-primary edit-category" 
                                    data-category-id="<%= category.id %>" 
                                    title="Edit">
                                <i class="fas fa-edit"></i>
                            </button>
                            <button type="button" class="btn btn-outline-danger delete-category" 
                                    data-category-id="<%= category.id %>" 
                                    data-category-name="<%= category.name %>"
                                    title="Delete">
                                <i class="fas fa-trash"></i>
                            </button>
                        </div>
                    </td>
                </tr>
            <% }); %>
        </tbody>
    </table>
</div>

<% if (categories.length === 0) { %>
    <div class="text-center py-5">
        <i class="fas fa-folder-open fa-3x text-muted mb-3"></i>
        <h5 class="text-muted">No Categories</h5>
        <p class="text-muted">Add your first category to get started</p>
    </div>
<% } %>

<!-- Category Modal -->
<div class="modal fade" id="categoryModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="categoryModalTitle">Add Category</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form id="categoryForm" enctype="multipart/form-data">
                <div class="modal-body">
                    <input type="hidden" id="categoryId" name="categoryId">
                    
                    <div class="row">
                        <div class="col-md-8">
                            <div class="mb-3">
                                <label for="categoryName" class="form-label">Category Name *</label>
                                <input type="text" class="form-control" id="categoryName" name="name" required>
                            </div>
                            
                            <div class="mb-3">
                                <label for="categoryDescription" class="form-label">Description</label>
                                <textarea class="form-control" id="categoryDescription" name="description" rows="3"></textarea>
                            </div>
                            
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="parentCategory" class="form-label">Parent Category</label>
                                        <select class="form-select" id="parentCategory" name="parent_id">
                                            <option value="">Main Category</option>
                                            <% categories.filter(c => c.active).forEach(category => { %>
                                                <option value="<%= category.id %>"><%= category.name %></option>
                                            <% }); %>
                                        </select>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="sortOrder" class="form-label">Sort Order</label>
                                        <input type="number" class="form-control" id="sortOrder" name="sort_order" value="0" min="0">
                                    </div>
                                </div>
                            </div>
                            
                            <div class="mb-3">
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="categoryActive" name="active" checked>
                                    <label class="form-check-label" for="categoryActive">
                                        Active Category
                                    </label>
                                </div>
                            </div>
                        </div>
                        
                        <div class="col-md-4">
                            <div class="mb-3">
                                <label for="categoryImage" class="form-label">Image</label>
                                <input type="file" class="form-control" id="categoryImage" name="image" accept="image/*">
                                <div class="form-text">JPG, PNG, GIF до 5MB</div>
                            </div>
                            
                            <div class="text-center">
                                <div id="imagePreview" class="border rounded p-3" style="display: none;">
                                    <img id="previewImage" src="" alt="Preview" class="img-fluid" style="max-height: 150px;">
                                </div>
                                <div id="noImagePreview" class="border rounded p-3 text-muted">
                                    <i class="fas fa-image fa-2x mb-2"></i>
                                    <br>
                                    <small>Image Preview</small>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">
                        <span class="spinner-border spinner-border-sm d-none" id="submitSpinner"></span>
                        Save
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirm Deletion</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete category <strong id="deleteCategory"></strong>?</p>
                <p class="text-danger">This action cannot be undone.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDelete">Delete</button>
            </div>
        </div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    loadProductCounts();
    initCategoryManagement();
});

function loadProductCounts() {
    const productCountElements = document.querySelectorAll('.product-count');
    productCountElements.forEach(element => {
        const categoryId = element.dataset.categoryId;
        fetch(`/admin/categories/${categoryId}/products-count`)
            .then(response => response.json())
            .then(data => {
                element.textContent = data.count || 0;
            })
            .catch(error => {
                console.error('Error loading product count:', error);
                element.textContent = '?';
            });
    });
}

function initCategoryManagement() {
    const categoryModal = new bootstrap.Modal(document.getElementById('categoryModal'));
    const deleteModal = new bootstrap.Modal(document.getElementById('deleteModal'));
    const categoryForm = document.getElementById('categoryForm');
    const imageInput = document.getElementById('categoryImage');
    const imagePreview = document.getElementById('imagePreview');
    const previewImage = document.getElementById('previewImage');
    const noImagePreview = document.getElementById('noImagePreview');
    
    // Image preview
    imageInput.addEventListener('change', function(e) {
        const file = e.target.files[0];
        if (file) {
            const reader = new FileReader();
            reader.onload = function(e) {
                previewImage.src = e.target.result;
                imagePreview.style.display = 'block';
                noImagePreview.style.display = 'none';
            };
            reader.readAsDataURL(file);
        } else {
            imagePreview.style.display = 'none';
            noImagePreview.style.display = 'block';
        }
    });
    
    // Add category
    document.querySelector('[data-bs-target="#categoryModal"]').addEventListener('click', function() {
        resetForm();
        document.getElementById('categoryModalTitle').textContent = 'Add Category';
    });
    
    // Edit category
    document.querySelectorAll('.edit-category').forEach(button => {
        button.addEventListener('click', function() {
            const categoryId = this.dataset.categoryId;
            loadCategoryForEdit(categoryId);
        });
    });
    
    // Delete category
    document.querySelectorAll('.delete-category').forEach(button => {
        button.addEventListener('click', function() {
            const categoryId = this.dataset.categoryId;
            const categoryName = this.dataset.categoryName;
            document.getElementById('deleteCategory').textContent = categoryName;
            document.getElementById('confirmDelete').dataset.categoryId = categoryId;
            deleteModal.show();
        });
    });
    
    // Confirm delete
    document.getElementById('confirmDelete').addEventListener('click', function() {
        const categoryId = this.dataset.categoryId;
        deleteCategory(categoryId);
    });
    
    // Form submit
    categoryForm.addEventListener('submit', function(e) {
        e.preventDefault();
        submitCategoryForm();
    });
    
    // Search and filter
    document.getElementById('searchCategories').addEventListener('input', filterCategories);
    document.getElementById('showInactive').addEventListener('change', filterCategories);
}

function resetForm() {
    document.getElementById('categoryForm').reset();
    document.getElementById('categoryId').value = '';
    document.getElementById('imagePreview').style.display = 'none';
    document.getElementById('noImagePreview').style.display = 'block';
}

function loadCategoryForEdit(categoryId) {
    fetch(`/admin/categories/api/${categoryId}`)
        .then(response => response.json())
        .then(category => {
            document.getElementById('categoryModalTitle').textContent = 'Edit Category';
            document.getElementById('categoryId').value = category.id;
            document.getElementById('categoryName').value = category.name;
            document.getElementById('categoryDescription').value = category.description || '';
            document.getElementById('parentCategory').value = category.parent_id || '';
            document.getElementById('sortOrder').value = category.sort_order || 0;
            document.getElementById('categoryActive').checked = category.active;
            
            if (category.image_url) {
                document.getElementById('previewImage').src = category.image_url;
                document.getElementById('imagePreview').style.display = 'block';
                document.getElementById('noImagePreview').style.display = 'none';
            }
            
            new bootstrap.Modal(document.getElementById('categoryModal')).show();
        })
        .catch(error => {
            console.error('Error loading category:', error);
            alert('Error loading category');
        });
}

function submitCategoryForm() {
    const formData = new FormData(document.getElementById('categoryForm'));
    const categoryId = document.getElementById('categoryId').value;
    const isEdit = categoryId !== '';
    
    const spinner = document.getElementById('submitSpinner');
    spinner.classList.remove('d-none');
    
    const url = isEdit ? `/admin/categories/${categoryId}` : '/admin/categories';
    const method = isEdit ? 'PUT' : 'POST';
    
    fetch(url, {
        method: method,
        body: formData
    })
    .then(response => {
        if (isEdit) {
            return response.json();
        } else {
            return response.text();
        }
    })
    .then(data => {
        spinner.classList.add('d-none');
        if (isEdit) {
            if (data.success) {
                location.reload();
            } else {
                alert(data.error || 'Error updating category');
            }
        } else {
            location.reload();
        }
    })
    .catch(error => {
        spinner.classList.add('d-none');
        console.error('Error:', error);
        alert('Error saving category');
    });
}

function deleteCategory(categoryId) {
    fetch(`/admin/categories/${categoryId}`, {
        method: 'DELETE',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ permanent: 'true' })
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            document.getElementById('deleteModal').querySelector('.btn-close').click();
            location.reload();
        } else {
            alert(data.error || 'Error deleting category');
        }
    })
    .catch(error => {
        console.error('Error:', error);
        alert('Error deleting category');
    });
}

function filterCategories() {
    const searchTerm = document.getElementById('searchCategories').value.toLowerCase();
    const showInactive = document.getElementById('showInactive').checked;
    const rows = document.querySelectorAll('#categoriesTable tbody tr');
    
    rows.forEach(row => {
        const name = row.querySelector('td:nth-child(3)').textContent.toLowerCase();
        const isActive = !row.classList.contains('table-secondary');
        
        const matchesSearch = name.includes(searchTerm);
        const matchesFilter = showInactive || isActive;
        
        row.style.display = matchesSearch && matchesFilter ? '' : 'none';
    });
}
</script>